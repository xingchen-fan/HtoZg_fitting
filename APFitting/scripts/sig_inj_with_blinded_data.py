import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os

def nice_hist(column,hist_name,xlab="",nbins=50,mu_equals_one=-1):
  fig = plt.figure(figsize=(10,8))
  average_column = np.mean(column)
  std_dev = np.std(column)
  plt.hist(column,bins=nbins,range=[int(min(column)), int(max(column))], histtype=u'step')
  plt.axvline(average_column,color='b')
  plt.axvline(average_column + std_dev, color='b',linestyle='--')
  plt.axvline(average_column - std_dev, color='b',linestyle='--')

  if(mu_equals_one > 0):
    plt.axvline(mu_equals_one,color='r')

  print(hist_name + ": " + str(average_column) + "+-" + str(std_dev))
  plt.xlabel(xlab)
  plt.ylabel("Toys/" + str( (max(column)-min(column))/nbins ) )
  fig.savefig("./output/siginjection_summary/" + hist_name)

  return average_column,std_dev

def make_plots(file_name,plt_name,cat,mu):
  dataframe_test = pd.read_csv("./siginjection_csv/" + file_name)
  print("./siginjection_csv/" + file_name)
  print(dataframe_test.head())
  variables = list(dataframe_test.columns.values)
  print(variables)
  #nice_hist(dataframe_test['Nsigfit'],"test_hisogram",variables[0])

  return_dict = {'NsigMC': sig_yields[cat]*mu}
  avg_val = 0
  std_dev_val = 0
  for var in variables:
    if(var=="Nsigfit" or var=="Nsiginj"):
      avg_val, std_dev_val = nice_hist(dataframe_test[var], plt_name + "_" + var,var,50,sig_yields[cat]*mu)
    else:
      avg_val, std_dev_val = nice_hist(dataframe_test[var], plt_name + "_" + var,var)

    return_dict[var + '_mean'] = avg_val
    return_dict[var + '_std_dev'] = std_dev_val

  return return_dict


if __name__=="__main__":
              #[ggF,   VBF, ttH_lep, WH_3l, ZH_MET, ttH_had]
  sig_yields = {'ggF':167.6, 'VBF':37.0, 'ttH_lep':0.40, 'WH_3l':0.85, 'ZH_MET':0.51, 'ttH_had':0.67}

  #if not os.listdir("./output/siginjection_summary"):
  #  os.mkdir("./output/siginjection_summary")
  #else:
  #  print("Directory \"./output/siginjection_summary\" exists.")
 
 
  
  categories=['VBF', 'ttH_lep', 'WH_3l', 'ZH_MET', 'ttH_had']#'ggF', 
  sig_strengths = ['1','2','3','4','5','6','7','8','9','10']
  #'0',
  #dicts_to_save = {}

  for cat in categories:
    dict_to_save = {}
    temp_dict_list = []

    for sig_str in sig_strengths:
      print('cat: ' + cat + ' sig_str: ' + sig_str)
      #Higgs mass region generated by fit
      csv_name = "csv_" + cat + "_agg_sig_strength_" + sig_str + "_extended.csv"
      plt_name = "bsig_" + cat + "_agg_"+ sig_str
     
      #Full region region generated by fit
      #csv_name = "csv_ffrgen" + cat + "_agg_sig_strength_" + sig_str + "_extended.csv"
      #plt_name = "ffrgen_" + cat + "_agg_"+ sig_str
      sig_str_info = make_plots(csv_name, plt_name, cat, int(sig_str))

      temp_dict_list.append( pd.DataFrame(sig_str_info, index=[int(sig_str)]) )
      
    dataframe_to_save = pd.concat(temp_dict_list)
    dataframe_to_save.to_csv('./siginjection_csv/csv_siginjection_summary_' + cat + '.csv')
    #dataframe_to_save.to_csv('./siginjection_csv/csv_siginjection_ffrgen_summary_' + cat + '.csv')
  

 # make_plots("csv_ttH_had_agg_sig_strength_1_extended.csv","test_ttH_had_agg_1",'ttH_had',1)




  #make_plots("csv_ttH_had_agg_sig_strength_5_extended.csv","ttH_had_agg_5") 
  #dataframe_test = pd.read_csv("./siginjection_csv/csv_ttH_had_agg_sig_strength_1_extended.csv")
  #print(dataframe_test.head())
  #variables = list(dataframe_test.columns.values)
  #print(variables)
  #nice_hist(dataframe_test['Nsigfit'],"test_hisogram",variables[0])

  #for var in variables:
  #  if(var=="Nsigfit" or var=="Nsiginj"):
  #    nice_hist(dataframe_test[var],"test_hisogram_" + var,var,50,sig_yields['ttH_had'])
  #  else:
  #    nice_hist(dataframe_test[var],"test_hisogram_" + var,var)

  #nice_hist()
  
